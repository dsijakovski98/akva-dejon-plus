{"version":3,"sources":["images/akva-dejon-logo-transparent.png","hooks/useOutsideClick.js","components/layout/NavLink.jsx","components/layout/Navbar/Navbar.jsx","components/Homepage.jsx","components/FeaturedPage.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","useOutsideClick","ref","parentRef","classToRemove","useEffect","handleOutsideClick","e","current","contains","target","classList","remove","document","addEventListener","removeEventListener","NavLink","props","productsRef","children","useRef","className","id","to","location","onMouseOver","add","name","Navbar","productListRef","burgerRef","navLinksRef","window","onresize","matchMedia","forEach","line","src","logo","alt","onClick","toggle","Homepage","FeaturedPage","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1a91ff4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/akva-dejon-logo-transparent.cfb9db0b.png\";","import { useEffect } from \"react\";\r\n\r\nconst useOutsideClick = (ref, parentRef, classToRemove) => {\r\n  useEffect(() => {\r\n    if (ref === null) {\r\n      return;\r\n    }\r\n\r\n    const handleOutsideClick = (e) => {\r\n      if (ref.current && !ref.current.contains(e.target)) {\r\n        ref.current.classList.remove(classToRemove);\r\n      }\r\n\r\n      // Remove the extra space given to the Products link\r\n      if (parentRef && parentRef.current.classList.contains(\"make-room\")) {\r\n        parentRef.current.classList.remove(\"make-room\");\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleOutsideClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n    };\r\n  }, [ref, parentRef, classToRemove]);\r\n};\r\n\r\nexport default useOutsideClick;\r\n","import React from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useOutsideClick from \"../../hooks/useOutsideClick\";\r\n\r\nfunction NavLink(props) {\r\n  const productsRef = props.children ? props.children.ref : null;\r\n  const parentRef = useRef(null);\r\n  useOutsideClick(productsRef, parentRef, \"products-list-active\");\r\n\r\n  const displayProductsList = () => {\r\n    if (props.children && props.children.ref) {\r\n      props.children.ref.current.classList.add(\"products-list-active\");\r\n    }\r\n\r\n    // Add extra space to the Products link\r\n    if (parentRef && parentRef.current.id === \"products\") {\r\n      parentRef.current.classList.add(\"make-room\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li className=\"nav-link\" ref={parentRef} id={props.id}>\r\n      <Link to={props.location} onMouseOver={displayProductsList}>\r\n        {props.name}\r\n      </Link>\r\n      {props.children}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default NavLink;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../../images/akva-dejon-logo-transparent.png\";\r\nimport NavLink from \"../NavLink\";\r\n\r\nfunction Navbar() {\r\n  const productListRef = useRef(null);\r\n  const burgerRef = useRef(null);\r\n  const navLinksRef = useRef(null);\r\n\r\n  // Make burger lines into X\r\n  const animateBurgerLines = (lines) => {\r\n    lines.forEach((line) => {\r\n      line.classList.toggle(\"toggler\");\r\n    });\r\n  };\r\n\r\n  const removeBurgerMenu = () => {\r\n    // Make nav links inactive\r\n    navLinksRef.current.classList.remove(\"nav-links-active\");\r\n\r\n    // Make burger lines horizontal\r\n    burgerRef.current.children.forEach((line) => {\r\n      line.classList.remove(\"toggler\");\r\n    });\r\n  };\r\n\r\n  const handleBurgerClick = () => {\r\n    // Toggle nav links between active and inactive\r\n    navLinksRef.current.classList.toggle(\"nav-links-active\");\r\n\r\n    // Call animation of burger lines\r\n    animateBurgerLines(burgerRef.current.children);\r\n  };\r\n\r\n  // Check resize of window to remove responsive classes\r\n  useEffect(() => {\r\n    window.onresize = () => {\r\n      if (window.matchMedia(\"(min-width: 1100px)\")) {\r\n        removeBurgerMenu();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"container\">\r\n        <div className=\"navigation\">\r\n          <div className=\"company-logo\">\r\n            <img src={logo} alt=\"company logo left side\" />\r\n          </div>\r\n          <nav className=\"navbar\">\r\n            <ul className=\"nav-links\" ref={navLinksRef}>\r\n              <NavLink location=\"/home\" name=\"Почетна\" />\r\n              <NavLink location=\"/home\" name=\"Производи\" id=\"products\">\r\n                <ul className=\"products-list\" ref={productListRef}>\r\n                  <li>\r\n                    <Link to=\"/products/ch\">Хемиски производи</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to=\"/products/hr\">Прехранбени производи</Link>\r\n                  </li>\r\n                </ul>\r\n              </NavLink>\r\n              <li className=\"nav-logo\">\r\n                <img src={logo} alt=\"company logo\" />\r\n              </li>\r\n              <NavLink location=\"/about\" name=\"За нас\" />\r\n              <NavLink location=\"/contact\" name=\"Контакт\" />\r\n              {/* <NavLink location=\"/contact\" name=\"Контакт\" /> */}\r\n            </ul>\r\n          </nav>\r\n          <div\r\n            className=\"hamburger\"\r\n            ref={burgerRef}\r\n            onClick={handleBurgerClick}\r\n          >\r\n            <div className=\"line line1\"></div>\r\n            <div className=\"line line2\"></div>\r\n            <div className=\"line line3\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Homepage(props) {\r\n  return <div>homepage</div>;\r\n}\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction FeaturedPage() {\r\n  return (\r\n    <div>\r\n      <Link to=\"/home\">Visit our page</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeaturedPage;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar/Navbar\";\nimport Homepage from \"./components/Homepage\";\nimport FeaturedPage from \"./components/FeaturedPage\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        {/* <div className=\"middle\"></div> */}\n        <Switch>\n          <Route exact path=\"/\" component={FeaturedPage} />\n          <Navbar />\n          <Route exact path=\"/home\" component={Homepage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/index.css\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}